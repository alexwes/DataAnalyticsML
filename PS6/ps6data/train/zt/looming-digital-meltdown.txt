for computer security professionals, 2018 started with a bang. a new class of security vulnerability -- a variety of flaws that affect almost all major microprocessor chips, and that could enable hackers to steal information from personal computers as well as cloud computing services -- was  announced on wednesday. the news prompted a rush of fixes, ruining the holiday vacations of system administrators worldwide. for an ordinary computer user, there is not much to panic about right now. just keep your software updated so you receive the fixes. and consider installing an ad-blocker like ublock origin to protect against ads that carry malware that could exploit these vulnerabilities. that is about all you can do. however, as a citizen of a world in which digital technology is increasingly integrated into all objects -- not just phones but also cars, baby monitors and so on -- it is past time to panic. we have built the digital world too rapidly. it was constructed layer upon layer, and many of the early layers were never meant to guard so many valuable things: our personal correspondence, our finances, the very infrastructure of our lives. design shortcuts and other techniques for optimization -- in particular, sacrificing security for speed or memory space -- may have made sense when computers played a relatively small role in our lives. but those early layers are now emerging as enormous liabilities. the vulnerabilities announced last week have been around for decades, perhaps lurking unnoticed by anyone or perhaps long exploited. almost all modern microprocessors employ tricks to squeeze more performance out of a computer program. a common trick involves having the microprocessor predict what the program is about to do and start doing it before it has been asked to do it -- say, fetching data from memory. in a way, modern microprocessors act like attentive butlers, pouring that second glass of wine before you knew you were going to ask for it. but what if you weren't going to ask for that wine? what if you were going to switch to port? no problem: the butler just dumps the mistaken glass and gets the port. yes, some time has been wasted. but in the long run, as long as the overall amount of time gained by anticipating your needs exceeds the time lost, all is well. except all is not well. imagine that you don't want others to know about the details of the wine cellar. it turns out that by watching your butler's movements, other people can infer a lot about the cellar. information is revealed that would not have been had the butler patiently waited for each of your commands, rather than anticipating them. almost all modern microprocessors make these butler movements, with their revealing traces, and hackers can take advantage. there has been a rush to fortify our computing systems, and it may work for the moment. but at best, potential temporary fixes will entail a performance cost, since they involve rolling back strategies for optimizing performance. and since the problem is built into the hardware -- billions of chips that cannot easily be replaced -- fixing this class of problems may also be prohibitively expensive. at worst, these fixes are too late. the vulnerabilities announced last week were found by three independent teams whose investigations converged on the same flaw at the same time. it is possible that less-responsible actors were also converging on this flaw and may have already succeeded in exploiting it. modern computing security is like a flimsy house that needs to be fundamentally rebuilt. in recent years, we have suffered small collapses here and there, and made superficial fixes in response. there has been no real accountability for the companies at fault, even when the failures were a foreseeable result of underinvestment in security or substandard practices rather than an outdated trade-off of performance for security. there are better ways to make systems more secure. for example, you can build more isolation and separation into our systems, moving security functions to properly audited hardware and away from software (which is always more vulnerable). things cannot be hacked if they cannot be reached. this may mean that we have to sacrifice some speed for security. but the truth is that our computers are already quite fast. when they are slow for the end-user, it is often because of "bloatware": badly written programs or advertising scripts that wreak havoc as they try to track your activity online. if we were to fix that problem, we would gain speed (and avoid threatening and needless surveillance of our behavior). as things stand, we suffer through hack after hack, security failure after security failure. if commercial airplanes fell out of the sky regularly, we wouldn't just shrug. we would invest in understanding flight dynamics, hold companies accountable that did not use established safety procedures, and dissect and learn from new incidents that caught us by surprise. and indeed, with airplanes, we did all that. there is no reason we cannot do the same for safety and security of our digital systems.
